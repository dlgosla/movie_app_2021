{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","class","src","alt","className","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRA8BeA,MA3Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAEhD,OAAQ,sBAAKC,MAAM,QAAX,UACN,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAErC,sBAAKI,MAAQ,aAAb,UACE,oBAAIG,UAAU,cAAd,SAA8BP,IAC9B,oBAAIO,UAAU,aAAd,SAA4BR,IAC5B,oBAAIQ,UAAU,SAAd,SAAwBJ,EAAOK,KAAK,SAACC,EAAMC,GAAP,OAAiB,oBAAIH,UACzD,eADqD,SACrCE,SAChB,mBAAGF,UAAU,gBAAb,SAA8BN,EAAQU,MAAM,EAAE,KAAK,eCkD1CC,G,wNArDbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,6CALV,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAIX,EAAKM,SAAS,CAACN,SAAQD,WAAY,IAPzB,2C,uDAUZ,WACEQ,KAAKN,c,oBAIP,WACE,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACE,yBAASR,UAAU,YAAnB,SAECO,EACD,qBAAKP,UAAU,SAAf,SACE,sBAAMA,UAAW,eAAjB,0BAGA,qBAAKA,UAAY,SAAjB,SAEIQ,EAAOP,KAAI,SAAAe,GAAK,OAChB,cAAC,EAAD,CAEIzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANPoB,EAAMzB,e,GApCX2B,IAAMC,YCDxBC,IAASC,OAMP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,a","file":"static/js/main.0ae621ff.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Movie({id, year, title, summary, poster, genres}){\n\n  return (<div class=\"movie\">\n    <img src={poster} alt={title} title={title}/>\n    \n    <div class = \"movie_data\">\n      <h3 className=\"movie_title\" >{title}</h3>\n      <h5 className=\"movie_year\">{year}</h5>\n      <ul className=\"genres\">{genres.map( (genre,index) => <li className = \n      \"genres_genre\">{genre}</li> )}</ul>\n      <p className=\"movie_summary\">{summary.slice(0,140)+\"...\"}</p>\n      \n    </div>\n  \n  </div>);\n}\n\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./Movie.css\"\nimport \"./App.css\"\n\n\n\nclass App extends React.Component{\n\n  state = {\n    isLoading : true,\n    movies : []\n  };\n\n  getMovies = async ()    => {\n    const {\n      data: {\n        data: {movies}\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\") //axios가 끝날 때 까지 기다려ㅑㅆ다가 실행해\n    \n    this.setState({movies, isLoading : false});\n  };\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n\n  render() {\n    const {isLoading, movies} = this.state;\n    return (\n      <section className=\"container\">\n\n      {isLoading ? (\n      <div className=\"loader\">\n        <span className =\"loader__text\">Loading...</span>\n      </div>\n      ) : (\n        <div className = \"movies\">\n          {\n            movies.map(movie => (\n            <Movie \n                key = {movie.id}\n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n                />\n            ))}\n          \n        </div>\n      )\n      } \n    </section>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// 컴포넌트 : html을 반환하는 함수\n\nReactDOM.render(\n  //컴포넌트를 사용할 때 쓰는 방법\n  //리액트는 컴포넌트를 사용해서  html처럼 작성하려는 경우에 팔요\n  // 자바스크립트와 html 사이의 이런 조합을 jsx라고 부름\n\n  //리액트 어플리케이션은 한번에 하나의 컴포넌트만 랜더링할 수 있음\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('potato')\n);\n\n\n"],"sourceRoot":""}